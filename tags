!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ioannis/Desktop/Coding/Parallel and Distributed Systems/Task1/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(TARGET)	src/Makefile	/^$(TARGET): $(OBJS)$/;"	t
%.o	src/Makefile	/^%.o: %.c$/;"	t
CC	src/Makefile	/^CC = gcc$/;"	m
CFLAGS	src/Makefile	/^CFLAGS = -I..\/include -I\/usr\/include\/openblas -fopenmp$/;"	m
DataSet	include/kNN.h	/^} DataSet;$/;"	t	typeref:struct:__anona5873d750108
KNN_H	include/kNN.h	/^#define KNN_H$/;"	d
OBJS	src/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
SRCS	src/Makefile	/^SRCS = main.c random_input.c print_matrix.c calculate_distance.c quick_select.c find.c$/;"	m
TARGET	src/Makefile	/^TARGET = kNN$/;"	m
__anona5873d750108	include/kNN.h	/^typedef struct {$/;"	s
all	src/Makefile	/^all: $(TARGET)$/;"	t
calculate_distances	src/calculate_distance.c	/^void calculate_distances(const DataSet* C, const DataSet* Q, double* D) {$/;"	f	typeref:typename:void
clean	src/Makefile	/^clean:$/;"	t
cols	include/kNN.h	/^  size_t  cols;$/;"	m	struct:__anona5873d750108	typeref:typename:size_t
data	include/kNN.h	/^  double* data;$/;"	m	struct:__anona5873d750108	typeref:typename:double *
findKNN	src/find.c	/^void findKNN(const double* D, int n, int k, int* knn_indices, double* knn_distances) {$/;"	f	typeref:typename:void
main	src/main.c	/^int main() {$/;"	f	typeref:typename:int
partition	src/quick_select.c	/^int partition(double* arr, int* indices, int left, int right) {$/;"	f	typeref:typename:int
print_matrix	src/print_matrix.c	/^void print_matrix(const double* matrix, size_t rows, size_t cols) {$/;"	f	typeref:typename:void
quickSelect	src/quick_select.c	/^void quickSelect(double* arr, int* indices, int left, int right, int k) {$/;"	f	typeref:typename:void
random_data	src/random_input.c	/^void random_data(DataSet* dataset, size_t points, size_t dimensions) {$/;"	f	typeref:typename:void
rows	include/kNN.h	/^  size_t  rows;$/;"	m	struct:__anona5873d750108	typeref:typename:size_t
swap	src/quick_select.c	/^void swap(double* arr, int i, int j) {$/;"	f	typeref:typename:void
